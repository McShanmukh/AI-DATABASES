{"ast":null,"code":"var _jsxFileName = \"/home/chandhan/ai_databases/Frontend/src/components/login/register.jsx\";\nimport React from \"react\"; // function ValidationMessage(props) {\n//   if (!props.valid) {\n//     return(\n//       <div className='error-msg'>{props.message}</div>\n//     )\n//   }\n//   return null;\n// }\n// export class Register extends React.Component {\n//   state = {\n//     username: '', usernameValid: false,\n//     email: '', emailValid: false,\n//     password: '', passwordValid: false,\n//     passwordConfirm: '', passwordConfirmValid: false,\n//     formValid: false,\n//     errorMsg: {}\n//   }\n//   validateForm = () => {\n//     const {usernameValid, emailValid, passwordValid, passwordConfirmValid} = this.state;\n//     this.setState({\n//       formValid: usernameValid && emailValid && passwordValid && passwordConfirmValid\n//     })\n//   }\n//   updateFirstname = (firstname) => {\n//     this.setState({firstname}, this.validateFirstname)\n//   }\n//  updateLastname = (lastname) => {\n//     this.setState({lastname}, this.validateLastname)\n//   }\n//   validateFirstname = () => {\n//     const {firstname} = this.state;\n//     let firstnameValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n//     if (firstname.length < 3) {\n//       firstnameValid = false;\n//       errorMsg.firstname = 'Must be at least 3 characters long'\n//     }\n//     this.setState({firstnameValid, errorMsg}, this.validateForm)\n//   }\n//    validateLastname = () => {\n//     const {lastname} = this.state;\n//     let lastnameValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n//     if (lastname.length < 3) {\n//       lastnameValid = false;\n//       errorMsg.lastname = 'Must be at least 3 characters long'\n//     }\n//     this.setState({lastnameValid, errorMsg}, this.validateForm)\n//   }\n//    updateEmail = (email) => {\n//     this.setState({email}, this.validateEmail)\n//   }\n//   validateEmail = () => {\n//     const {email} = this.state;\n//     let emailValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n//     // checks for format _@_._\n//     if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)){\n//       emailValid = false;\n//       errorMsg.email = 'Invalid email format'\n//     }\n//     this.setState({emailValid, errorMsg}, this.validateForm)\n//   }\n//   updatePassword = (password) => {\n//     this.setState({password}, this.validatePassword);\n//   }\n//   validatePassword = () => {\n//     const {password} = this.state;\n//     let passwordValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n//     // must be 6 charsclass App extends React.Component {\n// state = { \n//   firstName: '' ,\n//   LastName: '' ,\n//   phoneName: '' ,\n//   email: '' ,\n//   password: '', \n//   confirmPassword: '' \n// };\n// handleSubmit = async (event) => {\n//   event.preventDefault();\n//   // const resp = await axios.get(`https://www.google.com/search?q=${this.state.companyName}`);\n//   // this.props.onSubmit(resp.data);\n//   this.setState({ \n//     firstName: '' ,\n//     LastName: '' ,\n//     phoneName: '' ,\n//     email: '' ,\n//     password: '', \n//     confirmPassword: '' \n//   });\n// };\n//     // must contain a number\n//     // must contain a special character\n//     if (password.length < 6) {\n//       passwordValid = false;\n//       errorMsg.password = 'Password must be at least 6 characters long';\n//     } else if (!/\\d/.test(password)){\n//       passwordValid = false;\n//       errorMsg.password = 'Password must contain a digit';\n//     } else if (!/[!@#$%^&*]/.test(password)){\n//       passwordValid = false;\n//       errorMsg.password = 'Password must contain special character: !@#$%^&*';\n//     }\n//     this.setState({passwordValid, errorMsg}, this.validateForm);\n//   }\n//   updatePhone = (phone) => {\n//     this.setState({phone}, this.validatePhone);\n//   }\n//   validatePhone = () => {\n//     const {phone} = this.state;\n//     let phoneValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n//     // must be 10 chars\n//     // must be a number\n//     // must no contain a special character\n//      if (!/\\d/.test(phone)){\n//       phoneValid = false;\n//       errorMsg.phone = 'Phonenumber must not contain a letter';\n//     } else if (/[!@.#$%^&*]/.test(phone)){\n//       phoneValid = false;\n//       errorMsg.phone = 'Phonenumber must not contain special character: !@#$%^&*';\n//     }\n//     else if (phone.length > 10) {\n//       phoneValid = false;\n//       errorMsg.phone = 'Phonenumber Must have 10 digits only';\n//     } else if (!/\\d/.test(phone)){\n//       phoneValid = false;\n//       errorMsg.phone = 'Phonenumber must not contain a letter';\n//     }\n//     this.setState({phoneValid, errorMsg}, this.validateForm);\n//   }\n//   updatePasswordConfirm = (passwordConfirm) => {\n//     this.setState({passwordConfirm}, this.validatePasswordConfirm)\n//   }\n//   validatePasswordConfirm = () => {\n//     const {passwordConfirm, password} = this.state;\n//     let passwordConfirmValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n//     if (password !== passwordConfirm) {\n//       passwordConfirmValid = false;\n//       errorMsg.passwordConfirm = 'Passwords do not match'\n//     }\n//     this.setState({passwordConfirmValid, errorMsg}, this.validateForm);\n//   }\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: '',\n      LastName: '',\n      phoneName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // const resp = await axios.get(`https://www.google.com/search?q=${this.state.companyName}`);\n      // this.props.onSubmit(resp.data);\n\n      this.setState({\n        firstName: '',\n        LastName: '',\n        phoneName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"base-container\",\n      ref: this.props.containerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Firstname\", React.createElement(\"input\", {\n      type: \"text\",\n      label: \"name\",\n      value: this.state.firstName,\n      onChange: event => this.setState({\n        firstName: event.target.value\n      }),\n      placeholder: \"Enter Firstname\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Lastname\", React.createElement(\"input\", {\n      type: \"text\",\n      label: \"name\",\n      value: this.state.LastName,\n      onChange: event => this.setState({\n        LastName: event.target.value\n      }),\n      placeholder: \"Enter LastName\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"phoneName\", React.createElement(\"input\", {\n      type: \"text\",\n      label: \"name\",\n      value: this.state.phoneName,\n      onChange: event => this.setState({\n        phoneName: event.target.value\n      }),\n      placeholder: \"Enter phoneName\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Email\", React.createElement(\"input\", {\n      type: \"text\",\n      label: \"name\",\n      value: this.state.Email,\n      onChange: event => this.setState({\n        Email: event.target.value\n      }),\n      placeholder: \"Enter Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"password\", React.createElement(\"input\", {\n      type: \"password\",\n      label: \"name\",\n      value: this.state.password,\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      placeholder: \"Enter password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"confirmPassword\", React.createElement(\"input\", {\n      type: \"password\",\n      label: \"name\",\n      value: this.state.confirmPassword,\n      onChange: event => this.setState({\n        confirmPassword: event.target.value\n      }),\n      placeholder: \"Enter confirmPassword\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Register\"))))));\n  }\n\n}","map":{"version":3,"sources":["/home/chandhan/ai_databases/Frontend/src/components/login/register.jsx"],"names":["React","Register","Component","state","firstName","LastName","phoneName","email","password","confirmPassword","handleSubmit","event","preventDefault","setState","render","props","containerRef","target","value","Email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,eAAe,EAAE;AANX,KAD6B;;AAAA,SAWrCC,YAXqC,GAWtB,MAAOC,KAAP,IAAiB;AAC9BA,MAAAA,KAAK,CAACC,cAAN,GAD8B,CAE9B;AACA;;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,SAAS,EAAE,EADC;AAEZC,QAAAA,QAAQ,EAAE,EAFE;AAGZC,QAAAA,SAAS,EAAE,EAHC;AAIZ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","sourcesContent":["import React from \"react\";\n\n// function ValidationMessage(props) {\n//   if (!props.valid) {\n//     return(\n//       <div className='error-msg'>{props.message}</div>\n//     )\n//   }\n//   return null;\n// }\n\n// export class Register extends React.Component {\n  \n//   state = {\n//     username: '', usernameValid: false,\n//     email: '', emailValid: false,\n//     password: '', passwordValid: false,\n//     passwordConfirm: '', passwordConfirmValid: false,\n//     formValid: false,\n//     errorMsg: {}\n//   }\n\n//   validateForm = () => {\n//     const {usernameValid, emailValid, passwordValid, passwordConfirmValid} = this.state;\n//     this.setState({\n//       formValid: usernameValid && emailValid && passwordValid && passwordConfirmValid\n//     })\n//   }\n\n//   updateFirstname = (firstname) => {\n//     this.setState({firstname}, this.validateFirstname)\n//   }\n//  updateLastname = (lastname) => {\n//     this.setState({lastname}, this.validateLastname)\n//   }\n\n//   validateFirstname = () => {\n//     const {firstname} = this.state;\n//     let firstnameValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n\n//     if (firstname.length < 3) {\n//       firstnameValid = false;\n//       errorMsg.firstname = 'Must be at least 3 characters long'\n//     }\n\n//     this.setState({firstnameValid, errorMsg}, this.validateForm)\n//   }\n//    validateLastname = () => {\n//     const {lastname} = this.state;\n//     let lastnameValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n\n//     if (lastname.length < 3) {\n//       lastnameValid = false;\n//       errorMsg.lastname = 'Must be at least 3 characters long'\n//     }\n\n//     this.setState({lastnameValid, errorMsg}, this.validateForm)\n//   }\n\n//    updateEmail = (email) => {\n//     this.setState({email}, this.validateEmail)\n//   }\n\n//   validateEmail = () => {\n//     const {email} = this.state;\n//     let emailValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n\n//     // checks for format _@_._\n//     if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)){\n//       emailValid = false;\n//       errorMsg.email = 'Invalid email format'\n//     }\n\n//     this.setState({emailValid, errorMsg}, this.validateForm)\n//   }\n\n//   updatePassword = (password) => {\n//     this.setState({password}, this.validatePassword);\n//   }\n\n//   validatePassword = () => {\n//     const {password} = this.state;\n//     let passwordValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n\n//     // must be 6 charsclass App extends React.Component {\n  // state = { \n  //   firstName: '' ,\n  //   LastName: '' ,\n  //   phoneName: '' ,\n  //   email: '' ,\n  //   password: '', \n  //   confirmPassword: '' \n  // };\n  \n  \n  // handleSubmit = async (event) => {\n  //   event.preventDefault();\n  //   // const resp = await axios.get(`https://www.google.com/search?q=${this.state.companyName}`);\n  //   // this.props.onSubmit(resp.data);\n  //   this.setState({ \n  //     firstName: '' ,\n  //     LastName: '' ,\n  //     phoneName: '' ,\n  //     email: '' ,\n  //     password: '', \n  //     confirmPassword: '' \n  //   });\n  // };\n//     // must contain a number\n//     // must contain a special character\n\n//     if (password.length < 6) {\n//       passwordValid = false;\n//       errorMsg.password = 'Password must be at least 6 characters long';\n//     } else if (!/\\d/.test(password)){\n//       passwordValid = false;\n//       errorMsg.password = 'Password must contain a digit';\n//     } else if (!/[!@#$%^&*]/.test(password)){\n//       passwordValid = false;\n//       errorMsg.password = 'Password must contain special character: !@#$%^&*';\n//     }\n\n//     this.setState({passwordValid, errorMsg}, this.validateForm);\n//   }\n//   updatePhone = (phone) => {\n//     this.setState({phone}, this.validatePhone);\n//   }\n\n//   validatePhone = () => {\n//     const {phone} = this.state;\n//     let phoneValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n\n//     // must be 10 chars\n//     // must be a number\n//     // must no contain a special character\n\n    \n//      if (!/\\d/.test(phone)){\n//       phoneValid = false;\n//       errorMsg.phone = 'Phonenumber must not contain a letter';\n//     } else if (/[!@.#$%^&*]/.test(phone)){\n//       phoneValid = false;\n//       errorMsg.phone = 'Phonenumber must not contain special character: !@#$%^&*';\n//     }\n//     else if (phone.length > 10) {\n//       phoneValid = false;\n//       errorMsg.phone = 'Phonenumber Must have 10 digits only';\n//     } else if (!/\\d/.test(phone)){\n//       phoneValid = false;\n//       errorMsg.phone = 'Phonenumber must not contain a letter';\n//     }\n\n//     this.setState({phoneValid, errorMsg}, this.validateForm);\n//   }\n\n//   updatePasswordConfirm = (passwordConfirm) => {\n//     this.setState({passwordConfirm}, this.validatePasswordConfirm)\n//   }\n\n//   validatePasswordConfirm = () => {\n//     const {passwordConfirm, password} = this.state;\n//     let passwordConfirmValid = true;\n//     let errorMsg = {...this.state.errorMsg}\n\n//     if (password !== passwordConfirm) {\n//       passwordConfirmValid = false;\n//       errorMsg.passwordConfirm = 'Passwords do not match'\n//     }\n\n//     this.setState({passwordConfirmValid, errorMsg}, this.validateForm);\n//   }\n  \nclass Register extends React.Component {\n  state = { \n    firstName: '' ,\n    LastName: '' ,\n    phoneName: '' ,\n    email: '' ,\n    password: '', \n    confirmPassword: '' \n  };\n  \n  \n  handleSubmit = async (event) => {\n    event.preventDefault();\n    // const resp = await axios.get(`https://www.google.com/search?q=${this.state.companyName}`);\n    // this.props.onSubmit(resp.data);\n    this.setState({ \n      firstName: '' ,\n      LastName: '' ,\n      phoneName: '' ,\n      email: '' ,\n      password: '', \n      confirmPassword: '' \n    });\n  };\n\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Register</div>\n        <div className=\"content\">\n          <div className=\"form\">\n          <form onSubmit={this.handleSubmit}>\n            {/* <div className=\"splitname\">\n              <label htmlFor=\"username\">First Name</label>\n              < ValidationMessage valid={this.state.firstnameValid} message={this.state.errorMsg.firstname} />\n              <input type=\"text\" name=\"firstname\" placeholder=\"UserName\" required=\"true\" value={this.state.firstname} onChange={(e) => this.updateFirstname(e.target.value)}/>\n            </div> \n                <br/>\n              <div className=\"splitname\">\n              <label htmlFor=\"username\">Last Name</label>\n              < ValidationMessage valid={this.state.lastnameValid} message={this.state.errorMsg.lastname} />\n              <input type=\"text\" name=\"lastname\" placeholder=\"UserName\" required=\"true\" value={this.state.lastname} onChange={(e) => this.updateLastname(e.target.value)}/>\n            </div> \n                <br/>\n                <div className=\"form-group\">\n              <label htmlFor=\"email\">E-Mail</label>\n              < ValidationMessage valid={this.state.emailValid} message={this.state.errorMsg.email} />\n              <input type=\"text\" name=\"e-mail\" placeholder=\"E-Mail\" value={this.state.email} onChange={(e) => this.updateEmail(e.target.value)} />\n            </div> \n                <br/>\n                <div className=\"form-group\">\n              <label htmlFor=\"phone\">Phone-Number</label>\n               < ValidationMessage valid={this.state.phoneValid} message={this.state.errorMsg.phone} />\n              <input type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" name=\"phone\" placeholder=\"Phone-Number\" onChange={(e) => this.updatePhone(e.target.value)} /> \n            </div> \n                <br/>  \n                <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n               < ValidationMessage valid={this.state.passwordValid} message={this.state.errorMsg.password} />\n              <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password} onChange={(e) => this.updatePassword(e.target.value)} />\n            </div>\n                <br/>\n                 <div className=\"form-group\">\n              <label htmlFor=\"password-confirmation\">Confirm Password</label>\n              < ValidationMessage valid={this.state.passwordConfirmValid} message={this.state.errorMsg.passwordConfirm} />\n              <input type=\"password\" name=\"last-name\" placeholder=\"Last-Name\" value={this.state.passwordConfirm} onChange={(e) => this.updatePasswordConfirm(e.target.value)} />\n            </div> \n                <div className=\"footer\">\n          <button type=\"button\" className=\"btn\" disabled={!this.state.formValid}>\n            Register\n          </button>\n        </div> */}\n         <div className=\"forms\">\n        <label>\n          Firstname\n          <input \n            type=\"text\" \n            label=\"name\"\n            value={this.state.firstName}\n            onChange={event => this.setState({ firstName: event.target.value })}\n            placeholder=\"Enter Firstname\" \n            required \n          />\n          </label>\n          </div>\n          <br />\n          <div className=\"forms\">\n        <label>\n          Lastname\n          <input \n            type=\"text\" \n            label=\"name\"\n            value={this.state.LastName}\n            onChange={event => this.setState({ LastName: event.target.value })}\n            placeholder=\"Enter LastName\" \n            required \n          />\n          </label>\n          </div>\n          <br />\n          <div className=\"forms\">\n        <label>\n          phoneName\n          <input \n            type=\"text\" \n            label=\"name\"\n            value={this.state.phoneName}\n            onChange={event => this.setState({ phoneName: event.target.value })}\n            placeholder=\"Enter phoneName\" \n            required \n          />\n          </label>\n          </div>\n          <br />\n          <div className=\"forms\">\n        <label>\n          Email\n          <input \n            type=\"text\" \n            label=\"name\"\n            value={this.state.Email}\n            onChange={event => this.setState({ Email: event.target.value })}\n            placeholder=\"Enter Email\" \n            required \n          />\n          </label>\n          </div>\n          <br />\n          <div className=\"forms\">\n        <label>\n          password\n          <input \n            type=\"password\" \n            label=\"name\"\n            value={this.state.password}\n            onChange={event => this.setState({ password: event.target.value })}\n            placeholder=\"Enter password\" \n            required \n          />\n          </label>\n          </div>\n          <br />\n          <div className=\"forms\">\n        <label>\n          confirmPassword\n          <input \n            type=\"password\" \n            label=\"name\"\n            value={this.state.confirmPassword}\n            onChange={event => this.setState({ confirmPassword: event.target.value })}\n            placeholder=\"Enter confirmPassword\" \n            required \n          />\n          </label>\n          </div>\n          <br />\n          <div className=\"footer\">\n          <button className=\"btn\">Register</button>\n          </div>\n       \n\n\n\n\n\n\n\n\n              </form> \n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}